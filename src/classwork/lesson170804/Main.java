package classwork.lesson170804;

import java.util.Map;

public class Main {
    public static void main(String[] args) {
        System.out.println("asd");
        StringBuilder sb = new StringBuilder("asd");
        sb.insert(0, 'h');
        sb.delete(0,2);
        sb.insert(0, "asd");
        System.out.println(sb.toString());

//        Map.
    }
}

//книга java generics and collections можно почитать
//в codingBat надо прорешать все, кроме AP
//Лена с собеса посоветовала по дженерикам посмотреть видосы Ткача на ютубе (вроде для тестеров, or sth)

/*
все блоки try-catch-finally должны содержать фигурные скобки
    продолжаем generics (да тоже пересматривать)
compareTo(obj) - метод из интерфейса comparable, который реализуют многие классы - нужен для сравнения ссылочных типов; на эту тему 2 часть урока - довольно неплохо объяснено
multiple bounds - когда хотим обратиться к объектам классов, имплементирующих сразу несколько интерфейсов
wildcard - подстановочный тип - <? extends SomeClass> - 3 часть урока
    collectionzzz indaactionzzz
примитивы, ссылочные, массивы, ArrayList, LinkedList, Stack, Queue(interface), ArrayDeck
односвязного списка в стандартной библиотеке нет
//многие штуки в java сделаны ради обратной совместимости - чтоб работали программы на старых версиях java
очередь с приоритетами идеально подходит, чтобы находить несколько топовых результатов
HashMap - основные операции O(1) - не значит, что дешево, просто асимптотика; неизвестен порядок обхода
LinkedHashMap - то же самое, но с запоминанием порядка добавления; перезапись не считатеся добавлением
TreeMap - запоминается не порядок добавления, а натуральный порядок; реализован через красно-черные деревья имплементит:
SortedMap и NavigableMap - интерфейсы, содержащие кучу полезных order-operations
//абстрактный тип данных vs структура данных - все еще сложнаааа


 */