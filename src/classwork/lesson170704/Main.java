package classwork.lesson170704;

public class Main {
    public static void main(String[] args) {
        String[] asd = new String[10];
        System.out.println(asd);
        int a, b[];
    }
}

//hw1 - свой вывод массива с квадратными скобочками по красоте
//hw2 - arrys 1,2,3 on codingbat
//hw3* - написать поразрядную сортировку (1 000 000 целых чисел)

//можно почитать про bisect в гит - по  сути двоичный поиск по коммитам

/*
занятия будут пн-ср-пт со след. недели, на этой - вт-чт-пт
коммитить на гх стоит как можно чаще - проще искать ошибки, в т.ч. бисектом + хорошое документирование получается
лучше писать код каждый день по 15 минут, начиная с простейшего
сортировки нужны для 1)бинарного поиска 2) поиска дубликатов

    массивы
массив - особый вид объектов в java, т.е. их переменные - ссылочные
память под массив выделяется в куче (динамической памяти )
после создания массива нельзя менять его размер
arr.toString() - выводит ссылку
Arrays.toString(arr) - выводит содержимое
//по идее массив массивов - можно использовать как замену динамического массива? т.к. можно указывать на новые массивы
    параметры переменной длины
когда не знаеем заранее, сколько параметров будем передавать в метод
private static int sum(int... i) - тут i - массив
private static int sum(int first, int second, int... params) - тут нельзя будет передавать меньше 2 параметров
стоит раскурить основные методы класса Arrays, в т.ч. Arrays.asList()
    динамические массивы
представлены в виде java.util.ArrayList
//посмотреть горячие клавиши для просмотра класса и иерархии
!! если сделать объект static-полем, он инициализируется null'ом и компилятор пропустит обращение к нему без создания объекта
 */