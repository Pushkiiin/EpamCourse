package classwork.lesson170809;

public class Main {
    public static void main(String[] args) {
        System.out.println("asd");
    }
}

//hw - сделать dictionary generic'ом; сделать таблицу расширяемой; кэшировать хэш; замерить скорость на 1000, 10_000 и 100_000 эл-тов (добавление и поиск); *добавить удаление элемента
//мб где-нить оптимизировать что-нить

/*
//public class News<>{} - ? нельзя использовать как идентификатор типа, можно T, E, Object, News...
//News<?> news; - ?  только для объявления переменной
//нельзя создавать массив дженериков - только конкретного типа
Interface Queue extends Collection  - add, remove, offer, poll, element, peek, можно почитать в исходниках, что делают
    jit - just in time compilation
один из основных плюсов java
скомпилированная прога транслируется в байт-код - тот же двоичныый, но для несуществующего абстрактного копма
jvm - программа, которая имитирует этот самый абстрактный комп
из-за этого весь процесс получается медленнее
jvm следит за тем, какой код выполняется очень часто и для этого участка переводит байт-код в родной машинный код для компа
так же производится довольно много оптимизации при трансляции java-кода в байт-код
поэтому jvm популярна и как платформа - код на других языках (не java)
//интерпритация - выполнение байт-кода jvm
hotspot - название механизма этих оптимизаций

недостаток написанного нами мапа - тотальная неупорядоченность
последняя чсть - реализация итератора - весьма полезно
 */
